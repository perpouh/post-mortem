(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{427:function(e,t,n){"use strict";n.r(t);var a=n(53),s=Object(a.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"devise-token-auth導入と設定"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#devise-token-auth導入と設定"}},[e._v("#")]),e._v(" devise_token_auth導入と設定")]),e._v(" "),n("p",[e._v("以下の記事を参考に設定していきます。"),n("br"),e._v(" "),n("a",{attrs:{href:"https://qiita.com/Masahiro_T/items/6bc49a625b437a7c2f45",target:"_blank",rel:"noopener noreferrer"}},[e._v("[Rails] devise token auth を使う - Qiita"),n("OutboundLink")],1)]),e._v(" "),n("ol",[n("li",[e._v("Gemfileに "),n("code",[e._v("devise_token_auth")]),e._v(" を追加")]),e._v(" "),n("li",[e._v("bundle install")]),e._v(" "),n("li",[e._v("rails g devise_token_auth:install User auth")])]),e._v(" "),n("blockquote",[n("p",[e._v("次に、インストール時に作成されたdb/migrate/~_devise_token_auth_create_users.rbにTrackableに関するカラムを追記します。\nこれがないと、サインイン時にUndefined method current_sign_in_at（current_sign_in_atはTrackableに関するカラム）とエラーが出ます。")])]),e._v(" "),n("div",{staticClass:"language-rb extra-class"},[n("pre",{pre:!0,attrs:{class:"language-rb"}},[n("code",[e._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# ここを追記 --------------------------------------------")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("## Trackable")]),e._v("\n  t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("integer  "),n("span",{pre:!0,attrs:{class:"token symbol"}},[e._v(":sign_in_count")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" default"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" null"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("false")]),e._v("\n  t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("datetime "),n("span",{pre:!0,attrs:{class:"token symbol"}},[e._v(":current_sign_in_at")]),e._v("\n  t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("datetime "),n("span",{pre:!0,attrs:{class:"token symbol"}},[e._v(":last_sign_in_at")]),e._v("\n  t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("string   "),n("span",{pre:!0,attrs:{class:"token symbol"}},[e._v(":current_sign_in_ip")]),e._v("\n  t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("string   "),n("span",{pre:!0,attrs:{class:"token symbol"}},[e._v(":last_sign_in_ip")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# -----------------------------------------------------")]),e._v("\n")])])]),n("p",[e._v("devise_token_authの設定(config/initializers/devise_token_auth.rb)は私はほぼそのままです。"),n("br"),e._v(" "),n("code",[e._v("config.change_headers_on_each_request")]),e._v(" をアンコメントしてfalseに変更し、 "),n("code",[e._v("config.default_confirm_success_url")]),e._v(" を追記しました。curlで動かしたときにwarningが出た（んだった気がする）ため。")]),e._v(" "),n("ol",{attrs:{start:"4"}},[n("li",[e._v("application_controllerに以下を記述"),n("br"),e._v(" "),n("code",[e._v("include DeviseTokenAuth::Concerns::SetUserByToken")])]),e._v(" "),n("li",[e._v("user.rbに以下を記述"),n("br"),e._v(" "),n("code",[e._v("include DeviseTokenAuth::Concerns::User")])])]),e._v(" "),n("p",[e._v("ここまででcurlでの動作確認ができました。作業コミットはここ:"),n("a",{attrs:{href:"https://github.com/perpouh/post-mortem/pull/3/commits/09cbeab4a3b0cdcf06a26942e33e946db06b89ec",target:"_blank",rel:"noopener noreferrer"}},[e._v("09cbeab4a3b0cdcf06a26942e33e946db06b89ec"),n("OutboundLink")],1)]),e._v(" "),n("h2",{attrs:{id:"rails-corsの設定を追加"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#rails-corsの設定を追加"}},[e._v("#")]),e._v(" rails_corsの設定を追加")]),e._v(" "),n("p",[e._v("これでよしと思ったらVueからajaxでつないだときにヘッダが取得できませんでした。curlでつないだときには以下のように出力されていたのですが、この内のほとんどが見えない状態でした。")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('% curl localhost:3030/auth/sign_in -X POST -d \'{"email":"mail@example.com", "password":"password"}\' -H "content-type:application/json" -i\nHTTP/1.1 200 OK\nX-Frame-Options: SAMEORIGIN\nX-XSS-Protection: 1; mode=block\nX-Content-Type-Options: nosniff\nX-Download-Options: noopen\nX-Permitted-Cross-Domain-Policies: none\nReferrer-Policy: strict-origin-when-cross-origin\nContent-Type: application/json; charset=utf-8\naccess-token: MpVFdSiHYkXOPJ2cd53iMw ←これと\ntoken-type: Bearer\nclient: ZxKHfcwDceyBV0oL_2NNHQ ←これと\nexpiry: 1609136308\nuid: mail@example.com ←これが必要\nETag: W/"e22bae0c2e6294167626665a9858ea03"\nCache-Control: max-age=0, private, must-revalidate\nX-Request-Id: 3a87fc8f-7b87-4b07-8a90-cd5e7194ccdf\nX-Runtime: 0.465371\nVary: Origin\nTransfer-Encoding: chunked\n\n{"data":{"id":1,"email":"mail@example.com","provider":"email","uid":"mail@example.com","allow_password_change":false,"username":null,"nickname":null,"image":null,"ticket_count":0,"comment_count":0}}\n')])])]),n("p",[e._v("ざっと検索してみたところ、以下の記事がヒットしました。")]),e._v(" "),n("p",[n("a",{attrs:{href:"https://note.kiriukun.com/entry/20200303-axios-response-header-could-not-get",target:"_blank",rel:"noopener noreferrer"}},[e._v("Axiosでレスポンスヘッダが取得できなかった (CORSなAPI) - キリウ君が読まないノート"),n("OutboundLink")],1)]),e._v(" "),n("blockquote",[n("p",[e._v("どうやらCORSなWebAPIの場合、ブラウザ側で扱えるレスポンスヘッダの名称を、Access-Control-Expose-Headers ヘッダで明示的に指定する必要があるようです。\nCache-Control とか Content-Type のような一般的なレスポンスヘッダならば不要みたいですが、今回は自分で定義したレスポンスヘッダなので必要でした。")])]),e._v(" "),n("p",[e._v("CORSについてはrails_corsを導入しましたので、検索→"),n("a",{attrs:{href:"https://qiita.com/owlgae/items/a6e5ec7f0cdf89365e8c",target:"_blank",rel:"noopener noreferrer"}},[e._v("RailsでCORSのAccess-Control-Expose-Headersを設定する - Qiita"),n("OutboundLink")],1),e._v("がヒット、以下のように書き換えたところ、無事に必要な情報を取得することができました。")]),e._v(" "),n("div",{staticClass:"language-diff extra-class"},[n("pre",{pre:!0,attrs:{class:"language-diff"}},[n("code",[e._v("Rails.application.config.middleware.insert_before 0, Rack::Cors do\n"),n("span",{pre:!0,attrs:{class:"token unchanged"}},[n("span",{pre:!0,attrs:{class:"token prefix unchanged"}},[e._v(" ")]),n("span",{pre:!0,attrs:{class:"token line"}},[e._v(" allow do\n")]),n("span",{pre:!0,attrs:{class:"token prefix unchanged"}},[e._v(" ")]),n("span",{pre:!0,attrs:{class:"token line"}},[e._v("   origins ENV['CLIENT_HOST']\n")]),n("span",{pre:!0,attrs:{class:"token prefix unchanged"}},[e._v(" ")]),n("span",{pre:!0,attrs:{class:"token line"}},[e._v('   resource "*",\n')]),n("span",{pre:!0,attrs:{class:"token prefix unchanged"}},[e._v(" ")]),n("span",{pre:!0,attrs:{class:"token line"}},[e._v("     headers: :any,\n")]),n("span",{pre:!0,attrs:{class:"token prefix unchanged"}},[e._v(" ")]),n("span",{pre:!0,attrs:{class:"token line"}},[e._v("     methods: [:get, :post, :put, :patch, :delete, :options, :head],\n")])]),n("span",{pre:!0,attrs:{class:"token inserted-sign inserted"}},[n("span",{pre:!0,attrs:{class:"token prefix inserted"}},[e._v("+")]),n("span",{pre:!0,attrs:{class:"token line"}},[e._v("     expose: ['access-token', 'client', 'uid']\n")])]),n("span",{pre:!0,attrs:{class:"token unchanged"}},[n("span",{pre:!0,attrs:{class:"token prefix unchanged"}},[e._v(" ")]),n("span",{pre:!0,attrs:{class:"token line"}},[e._v(" end\n")])]),e._v("end\n")])])]),n("p",[e._v("これでVueからの疎通を確認できました。"),n("br"),e._v("\n全体PRはこれ:"),n("a",{attrs:{href:"https://github.com/perpouh/post-mortem/pull/3",target:"_blank",rel:"noopener noreferrer"}},[e._v("Feature/vuex #3"),n("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=s.exports}}]);